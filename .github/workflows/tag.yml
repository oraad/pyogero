name: Tag
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        poetry-version: ["1.2"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Test
        run: poetry run pytest tests/test_mock_*

  create-tag:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2"
      - name: Get version
        id: version
        run: echo "::set-output name=VERSION::v$(poetry version | awk '{ print $2 }')"
      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{steps.version.outputs.VERSION}}"

  build:
    needs: create-tag
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2"
      - name: Get version
        id: version
        run: echo "::set-output name=VERSION::v$(poetry version | awk '{ print $2 }')"
      - name: Poetry build for release
        run: poetry build
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "dist/*"
          tag: "${{steps.version.outputs.VERSION}}"
          replacesArtifacts: true
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.15
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
